name: CI/CD

on:
  push:
    branches: [release-1.0]

jobs:
  # 1Ô∏è‚É£ Build & Publish Stage
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build Frontend
      - name: Build Docker image (frontend)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/booklogix-frontend:latest ./frontend

      # Build Backend
      - name: Build Docker image (backend)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/booklogix-backend:latest ./backend

      # Push Frontend
      - name: Push Docker image (frontend)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/booklogix-frontend:latest

      # Push Backend
      - name: Push Docker image (backend)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/booklogix-backend:latest

      - name: ‚úÖ Images Published
        run: echo "üéâ Frontend & Backend images pushed to Docker Hub successfully!"

  # 2Ô∏è‚É£ Deploy Stage
  deploy:
    runs-on: [self-hosted, azure-vm]
    needs: build
    steps:
      - name: Checkout code (to get docker-compose.yml and env files)
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull latest images and deploy with Docker Compose v2
        run: |
          docker compose -f ./docker-compose.yml pull
          docker compose -f ./docker-compose.yml up -d --remove-orphans

      - name: Verify containers are running
        run: docker ps --filter "name=booklogix"

      - name: Check frontend logs (last 20 lines)
        run: docker logs --tail 20 booklogix-frontend || true

      - name: Check backend logs (last 20 lines)
        run: docker logs --tail 20 booklogix-backend || true
